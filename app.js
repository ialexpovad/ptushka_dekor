/* =========================================
   Ptushka Dekor ‚Äî —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞–≥–∞–∑–∏–Ω
   –¢–µ–º–∞ (light/dark) + i18n (RU/BE) + —á–∏–ø—ã-—Ñ–∏–ª—å—Ç—Ä—ã
   ========================================= */

const CONFIG = {
  SHEET_URL: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSdu-ukIcKN3DCYuKUXId6sTh62ieH4p7CzXN3FEPBtzo_55K8CQu00A6mhVgqt9Qn08tG7k464T3BW/pub?output=csv",
  SHEETS: {
    PRODUCTS_GID: "0",                        // –õ–∏—Å—Ç ¬´–¢–æ–≤–∞—Ä—ã¬ª
    META_GID: "1891142108"                    // ‚Üê –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ gid –ª–∏—Å—Ç–∞ ¬´–ò–Ω—Ñ–æ¬ª
  },
  COLUMN_MAP: {
    sku: "sku", title: "title", price: "price", old_price: "old_price",
    image: "image", category: "category", active: "active", discount: "discount"
  },
  GS_WEB_APP_URL: "https://script.google.com/macros/s/AKfycbzpboxaHaZSyp4nQfuDhC6TZrOpkq5m7aPlJe2E0GRdin_zFvGfj6GQQXFSw9jQl_-VaA/exec"
};

/* ===== helpers –¥–ª—è Published CSV ===== */
function withGid(url, gid){
  try { const u = new URL(url); u.searchParams.set("gid", String(gid)); return u.toString(); }
  catch { return url.replace(/gid=\d+/, `gid=${gid}`); }
}

/* ===== i18n ===== */
const I18N = {
  ru: {
    // topbar_msg:"–ë—É–∫–µ—Ç—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –≥–æ—Ä–æ–¥—É –•–æ–π–Ω–∏–∫–∏ ‚Äî –±—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ üå∏",
    nav_about:"–û –Ω–∞—Å", nav_catalog:"–ö–∞—Ç–∞–ª–æ–≥", nav_reviews:"–û—Ç–∑—ã–≤—ã", nav_contacts:"–ö–æ–Ω—Ç–∞–∫—Ç—ã", nav_delivery:"–î–æ—Å—Ç–∞–≤–∫–∞", nav_faq:"FAQ",

    hero_tag_city:"–•–æ–π–Ω–∏–∫–∏ ‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞", hero_tag_fresh:"–°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å",
    hero_eyebrow:"–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏ –¥–µ–∫–æ—Ä",
    hero_h1:"–°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å",
    hero_p:"–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–µ—Ç –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑ –∑–∞ 1‚Äì2 –º–∏–Ω—É—Ç—ã. –î–æ—Å—Ç–∞–≤–∏–º –ø–æ –≥–æ—Ä–æ–¥—É –∏–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –∫ —Å–∞–º–æ–≤—ã–≤–æ–∑—É.",
    hero_cta:"–°–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥", hero_cta2:"–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º",

    usp_fast:"–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞", usp_fresh:"–¢–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã", usp_custom:"–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏",

    about_h1_a:"–û", about_h1_b:"–Ω–∞—Å", about_card:"–õ—é–±–æ–≤—å –∫ –¥–µ—Ç–∞–ª—è–º",
    about_why:"–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å",
    about_p1:"–†–∞–±–æ—Ç–∞–µ–º —Å –∂–∏–≤—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ –∏ –±–µ—Ä–µ–∂–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–æ–π. –°–æ–±–∏—Ä–∞–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –ø–æ–¥ –±—é–¥–∂–µ—Ç, –ø–æ–≤–æ–¥ –∏ —Å—Ç–∏–ª—å.",
    about_p2:"–ë—ã—Å—Ç—Ä—ã–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö –∏ —á—ë—Ç–∫–∏–µ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.",
    benefit_range_t:"–û—Ç –∫–ª–∞—Å—Å–∏–∫–∏ –¥–æ —ç–∫–∑–æ—Ç–∏–∫–∏", benefit_range_d:"–ë—É–∫–µ—Ç—ã/–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –ø–æ–¥ –ª—é–±–æ–π –ø–æ–≤–æ–¥",
    benefit_bride_t:"–ë—É–∫–µ—Ç –Ω–µ–≤–µ—Å—Ç—ã", benefit_bride_d:"–°–≤–∞–¥–µ–±–Ω–∞—è —Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞ –∏ –¥–µ–∫–æ—Ä",
    benefit_delivery_t:"–ó–∞–∫–∞–∑ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞", benefit_delivery_d:"–•–æ–π–Ω–∏–∫–∏ –∏ –±–ª–∏–∂–∞–π—à–∏–µ —Ä–∞–π–æ–Ω—ã",
    about_cta:"–í –∫–∞—Ç–∞–ª–æ–≥",

    feat_delivery:"–î–æ—Å—Ç–∞–≤–∫–∞", feat_city:"–ü–æ –≥–æ—Ä–æ–¥—É", feat_exchange:"–û–±–º–µ–Ω", feat_as_agreed:"–ü–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏",
    feat_cards:"–û—Ç–∫—Ä—ã—Ç–∫–∏", feat_ribbons:"–∏ –ª–µ–Ω—Ç–æ—á–∫–∏", feat_safe:"–ù–∞–¥—ë–∂–Ω–æ", feat_careful:"–∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ",

    catalog_h1:"–ù–∞—à–∏ –±—É–∫–µ—Ç—ã",
    chip_all:"–í—Å–µ", chip_roses:"–†–æ–∑—ã", chip_tulips:"–¢—é–ª—å–ø–∞–Ω—ã", chip_peonies:"–ü–∏–æ–Ω—ã", chip_wedding:"–°–≤–∞–¥—å–±–∞", chip_exotic:"–≠–∫–∑–æ—Ç–∏–∫–∞",
    filters_search_placeholder:"–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é‚Ä¶",
    filters_all_categories:"–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    filters_reset:"–°–±—Ä–æ—Å",
    filters_cart_button:"–ö–æ—Ä–∑–∏–Ω–∞",
    empty_catalog:"–ö–∞—Ç–∞–ª–æ–≥ —Å–∫–æ—Ä–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—Å—è üå∏",

    delivery_h1_a:"–î–æ—Å—Ç–∞–≤–∫–∞", delivery_h1_b:"–≤ –•–æ–π–Ω–∏–∫–∞—Ö",
    delivery_title:"–ó–∞–∫–∞–∑ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –±—É–∫–µ—Ç–æ–≤ ‚Äî –•–æ–π–Ω–∏–∫–∏",
    delivery_point1:"–ë—É–∫–µ—Ç—ã/–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏: –æ—Ç –∫–ª–∞—Å—Å–∏–∫–∏ –¥–æ —ç–∫–∑–æ—Ç–∏–∫–∏",
    delivery_point2:"–ë—É–∫–µ—Ç –Ω–µ–≤–µ—Å—Ç—ã, —Å–≤–∞–¥–µ–±–Ω—ã–π –¥–µ–∫–æ—Ä",
    delivery_point3:"–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–ª–∏ –∫—É—Ä—å–µ—Ä–æ–º –ø–æ –≥–æ—Ä–æ–¥—É",
    delivery_btn1:"–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", delivery_btn2:"–°–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥",
    delivery_contacts:"–ö–æ–Ω—Ç–∞–∫—Ç—ã",
    delivery_address_t:"–ê–¥—Ä–µ—Å:", delivery_address_v:"—É–ª–∏—Ü–∞ –ñ—É–∫–æ–≤–∞ 2–õ, –•–æ–π–Ω–∏–∫–∏ 247618",
    delivery_phone_t:"–¢–µ–ª–µ—Ñ–æ–Ω:", delivery_hours_t:"–í—Ä–µ–º—è:", delivery_hours_v:"–µ–∂–µ–¥–Ω–µ–≤–Ω–æ 8:30‚Äì18:30",
    delivery_note:"–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º ‚Äî –ø–æ–¥—Å–∫–∞–∂–µ–º –ø–æ —Å–æ—Å—Ç–∞–≤—É, –±—é–¥–∂–µ—Ç—É –∏ —Å—Ä–æ–∫–∞–º –¥–æ—Å—Ç–∞–≤–∫–∏.",

    reviews_h1:"–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤", rev_1:"–ö—Ä–∞—Å–∏–≤–æ, –≤–æ–≤—Ä–µ–º—è, –∏ –∑–∞–ø–∞—Ö ‚Äî –≤–æ—Å—Ç–æ—Ä–≥!", rev_2:"–°–æ–±—Ä–∞–ª–∏ –±—É–∫–µ—Ç –ø–æ–¥ –±—é–¥–∂–µ—Ç –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è.", rev_buyer:"–ü–æ–∫—É–ø–∞—Ç–µ–ª—å",

    faq_h1_a:"–û—Ç–≤–µ—Ç—ã", faq_h1_b:"–Ω–∞ –≤–æ–ø—Ä–æ—Å—ã",
    faq_q1:"–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?", faq_a1:"–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–µ—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥–µ, –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è, —É—Ç–æ—á–Ω–∏–º –¥–µ—Ç–∞–ª–∏ –∏ —Å–æ–≥–ª–∞—Å—É–µ–º –¥–æ—Å—Ç–∞–≤–∫—É.",
    faq_q2:"–í—ã –¥–µ–ª–∞–µ—Ç–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏?", faq_a2:"–î–∞. –ü–æ–¥ –±—é–¥–∂–µ—Ç, —Ü–≤–µ—Ç–æ–≤—É—é –≥–∞–º–º—É –∏ –ø–æ–≤–æ–¥. –ü–æ–¥–±–µ—Ä—ë–º —Å–≤–µ–∂–∏–µ —Å–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã –∏ —É–ø–∞–∫–æ–≤–∫—É.",
    faq_q3:"–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É?", faq_a3:"–î–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –•–æ–π–Ω–∏–∫–∞–º –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ü–≤–µ—Ç–æ–≤). –¢–∞–∫–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–≤—ã–≤–æ–∑ –ø–æ –∞–¥—Ä–µ—Å—É: —É–ª. –ñ—É–∫–æ–≤–∞, 2–õ.",

    contact_h1_a:"–°–≤—è–∂–∏—Ç–µ—Å—å", contact_h1_b:"—Å –Ω–∞–º–∏",
    contact_name:"–ò–º—è", contact_email:"Email", contact_phone:"–¢–µ–ª–µ—Ñ–æ–Ω", contact_msg:"–°–æ–æ–±—â–µ–Ω–∏–µ", contact_submit:"–û—Ç–ø—Ä–∞–≤–∏—Ç—å",

    f_quick:"–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏", f_home:"–ì–ª–∞–≤–Ω–∞—è", f_about:"–û –Ω–∞—Å", f_catalog:"–ö–∞—Ç–∞–ª–æ–≥", f_reviews:"–û—Ç–∑—ã–≤—ã", f_contacts:"–ö–æ–Ω—Ç–∞–∫—Ç—ã",
    f_services:"–£—Å–ª—É–≥–∏", f_s1:"–ó–∞–∫–∞–∑ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –±—É–∫–µ—Ç–æ–≤ ‚Äî –•–æ–π–Ω–∏–∫–∏", f_s2:"–ë—É–∫–µ—Ç—ã/–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏: –æ—Ç –∫–ª–∞—Å—Å–∏–∫–∏ –¥–æ —ç–∫–∑–æ—Ç–∏–∫–∏", f_s3:"–ë—É–∫–µ—Ç –Ω–µ–≤–µ—Å—Ç—ã", f_s4:"–°–≤–∞–¥–µ–±–Ω—ã–π –¥–µ–∫–æ—Ä",
    f_address_t:"–ê–¥—Ä–µ—Å", f_address_v1:"—É–ª–∏—Ü–∞ –ñ—É–∫–æ–≤–∞, 2–õ", f_address_v2:"–≥. –•–æ–π–Ω–∏–∫–∏, 247618", f_address_v3:"–ë–µ–ª–∞—Ä—É—Å—å",
    f_contact_t:"–ö–æ–Ω—Ç–∞–∫—Ç—ã", f_feedback:"–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",

    rights:"–í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.",
    cart_title:"–ö–æ—Ä–∑–∏–Ω–∞", cart_total_label:"–ò—Ç–æ–≥–æ:", cart_checkout:"–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
    order_title:"–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞",
    order_name_label:"–ò–º—è*", order_phone_label:"–¢–µ–ª–µ—Ñ–æ–Ω*",
    order_dt_label:"–î–æ—Å—Ç–∞–≤–∫–∞ –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑*", order_dt_delivery:"–î–æ—Å—Ç–∞–≤–∫–∞", order_dt_pickup:"–°–∞–º–æ–≤—ã–≤–æ–∑",
    order_address_label:"–ê–¥—Ä–µ—Å (–µ—Å–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞)", order_when_label:"–ñ–µ–ª–∞–µ–º—ã–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è",
    order_comment_label:"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", order_hint:"–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏–ª–∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏.",
    order_submit:"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", order_success:"–°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.",
    order_error_empty:"–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.", order_error_send:"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.",

    add_to_cart:"–í –∫–æ—Ä–∑–∏–Ω—É", wishlist_title:"–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", share_title:"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
  },
  be: {
    // topbar_msg:"–ë—É–∫–µ—Ç—ã –∑ –¥–∞—Å—Ç–∞—û–∫–∞–π –ø–∞ –≥–æ—Ä–∞–¥–∑–µ –•–æ–π–Ω—ñ–∫—ñ ‚Äî —Ö—É—Ç–∫—ñ –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ü–µ üå∏",
    nav_about:"–ü—Ä–∞ –Ω–∞—Å", nav_catalog:"–ö–∞—Ç–∞–ª–æ–≥", nav_reviews:"–í–æ–¥–≥—É–∫—ñ", nav_contacts:"–ö–∞–Ω—Ç–∞–∫—Ç—ã", nav_delivery:"–î–∞—Å—Ç–∞—û–∫–∞", nav_faq:"FAQ",

    hero_tag_city:"–•–æ–π–Ω—ñ–∫—ñ ‚Ä¢ –î–∞—Å—Ç–∞—û–∫–∞", hero_tag_fresh:"–°–≤–µ–∂—ã—è –∫–≤–µ—Ç–∫—ñ —à—Ç–æ–¥–Ω—è",
    hero_eyebrow:"–ê—û—Ç–∞—Ä—Å–∫—ñ—è –∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ —ñ –¥—ç–∫–æ—Ä",
    hero_h1:"–°–≤–µ–∂—ã—è –∫–≤–µ—Ç–∫—ñ –∫–æ–∂–Ω—ã –¥–∑–µ–Ω—å",
    hero_p:"–ê–±—è—Ä—ã—Ü–µ –±—É–∫–µ—Ç —ñ –∞—Ñ–æ—Ä–º—ñ—Ü–µ –∑–∞–∫–∞–∑ –∑–∞ 1‚Äì2 —Ö–≤—ñ–ª—ñ–Ω—ã. –î–∞—Å—Ç–∞–≤—ñ–º –ø–∞ –≥–æ—Ä–∞–¥–∑–µ –∞–±–æ –ø–∞–¥—Ä—ã—Ö—Ç—É–µ–º –¥–∞ —Å–∞–º–∞–≤—ã–≤–∞–∑—É.",
    hero_cta:"–ü–∞–≥–ª—è–¥–∑–µ—Ü—å –∫–∞—Ç–∞–ª–æ–≥", hero_cta2:"–ù–∞–ø—ñ—Å–∞—Ü—å –Ω–∞–º",

    usp_fast:"–î–∞—Å—Ç–∞—û–∫–∞ —û –¥–∑–µ–Ω—å –∑–∞–∫–∞–∑—É", usp_fresh:"–¢–æ–ª—å–∫—ñ —Å–≤–µ–∂—ã—è –∫–≤–µ—Ç–∫—ñ", usp_custom:"–Ü–Ω–¥—ã–≤—ñ–¥—É–∞–ª—å–Ω—ã—è –∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ",

    about_h1_a:"–ü—Ä–∞", about_h1_b:"–Ω–∞—Å", about_card:"–õ—é–±–æ—û –¥–∞ –¥—ç—Ç–∞–ª—è—û",
    about_why:"–ß–∞–º—É –∞–±—ñ—Ä–∞—é—Ü—å –Ω–∞—Å",
    about_p1:"–ü—Ä–∞—Ü—É—é–µ–º –∑ –∂—ã–≤—ã–º—ñ –∫–≤–µ—Ç–∫–∞–º—ñ —ñ –¥–∞–ª—ñ–∫–∞—Ç–Ω–∞–π —É–ø–∞–∫–æ—û–∫–∞–π. –ó–±—ñ—Ä–∞–µ–º –∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ –ø–∞–¥ –±—é–¥–∂—ç—Ç, –Ω–∞–≥–æ–¥—É —ñ —Å—Ç—ã–ª—å.",
    about_p2:"–•—É—Ç–∫—ñ—è —û–∑–≥–∞–¥–Ω–µ–Ω–Ω—ñ —û –º—ç—Å—ç–¥–∂–∞—Ä–∞—Ö —ñ –¥–∞–∫–ª–∞–¥–Ω—ã—è —Ç—ç—Ä–º—ñ–Ω—ã –¥–∞—Å—Ç–∞—û–∫—ñ.",
    benefit_range_t:"–ê–¥ –∫–ª–∞—Å—ñ–∫—ñ –¥–∞ —ç–∫–∑–æ—Ç—ã–∫—ñ", benefit_range_d:"–ë—É–∫–µ—Ç—ã/–∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ –Ω–∞ –ª—é–±—ã –≤—ã–ø–∞–¥–∞–∫",
    benefit_bride_t:"–ë—É–∫–µ—Ç –Ω—è–≤–µ—Å—Ç—ã", benefit_bride_d:"–í—è—Å–µ–ª—å–Ω–∞—è —Ñ–ª–æ—Ä—ã—Å—Ç—ã–∫–∞ —ñ –¥—ç–∫–æ—Ä",
    benefit_delivery_t:"–ó–∞–∫–∞–∑ —ñ –¥–∞—Å—Ç–∞—û–∫–∞", benefit_delivery_d:"–•–æ–π–Ω—ñ–∫—ñ —ñ —Å—É—Å–µ–¥–Ω—ñ—è —Ä–∞—ë–Ω—ã",
    about_cta:"–£ –∫–∞—Ç–∞–ª–æ–≥",

    feat_delivery:"–î–∞—Å—Ç–∞—û–∫–∞", feat_city:"–ü–∞ –≥–æ—Ä–∞–¥–∑–µ", feat_exchange:"–ê–±–º–µ–Ω", feat_as_agreed:"–ü–∞ –¥–∞–º–æ—û–ª–µ–Ω–∞—Å—Ü—ñ",
    feat_cards:"–ö–∞—Ä—Üi—á–∫—ñ", feat_ribbons:"—ñ —Å—Ç—É–∂–∫—ñ", feat_safe:"–ù–∞–¥–∑–µ–π–Ω–∞", feat_careful:"—ñ –∞–∫—É—Ä–∞—Ç–Ω–∞",

    catalog_h1:"–ù–∞—à—ã –±—É–∫–µ—Ç—ã",
    chip_all:"–£—Å–µ", chip_roses:"–†–æ–∑—ã", chip_tulips:"–¶—é–ª—å–ø–∞–Ω—ã", chip_peonies:"–ü—ñ–≤–æ–Ω—ñ", chip_wedding:"–í—è—Å–µ–ª–ª–µ", chip_exotic:"–≠–∫–∑–æ—Ç—ã–∫–∞",
    filters_search_placeholder:"–ü–æ—à—É–∫ –ø–∞ –Ω–∞–∑–≤–µ‚Ä¶",
    filters_all_categories:"–£—Å–µ –∫–∞—Ç—ç–≥–æ—Ä—ã—ñ",
    filters_reset:"–°–∫—ñ–¥",
    filters_cart_button:"–ö–æ—à—ã–∫",
    empty_catalog:"–ö–∞—Ç–∞–ª–æ–≥ —Ö—É—Ç–∫–∞ –ø–∞–ø–æ—û–Ω—ñ—Ü—Ü–∞ üå∏",

    delivery_h1_a:"–î–∞—Å—Ç–∞—û–∫–∞", delivery_h1_b:"—É –•–æ–π–Ω—ñ–∫–∞—Ö",
    delivery_title:"–ó–∞–∫–∞–∑ —ñ –¥–∞—Å—Ç–∞—û–∫–∞ –±—É–∫–µ—Ç–∞—û ‚Äî –•–æ–π–Ω—ñ–∫—ñ",
    delivery_point1:"–ë—É–∫–µ—Ç—ã/–∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ: –∞–¥ –∫–ª–∞—Å—ñ–∫—ñ –¥–∞ —ç–∫–∑–æ—Ç—ã–∫—ñ",
    delivery_point2:"–ë—É–∫–µ—Ç –Ω—è–≤–µ—Å—Ç—ã, –≤—è—Å–µ–ª—å–Ω—ã –¥—ç–∫–æ—Ä",
    delivery_point3:"–°–∞–º–∞–≤—ã–≤–∞–∑ –∞–±–æ –∫—É—Ä‚Äô–µ—Ä–∞–º –ø–∞ –≥–æ—Ä–∞–¥–∑–µ",
    delivery_btn1:"–ó—Ä–∞–±—ñ—Ü—å –∑–∞–∫–∞–∑", delivery_btn2:"–ì–ª—è–¥–∑–µ—Ü—å –∫–∞—Ç–∞–ª–æ–≥",
    delivery_contacts:"–ö–∞–Ω—Ç–∞–∫—Ç—ã",
    delivery_address_t:"–ê–¥—Ä–∞—Å:", delivery_address_v:"–≤—É–ª—ñ—Ü–∞ –ñ—É–∫–∞–≤–∞ 2–õ, –•–æ–π–Ω—ñ–∫—ñ 247618",
    delivery_phone_t:"–¢—ç–ª–µ—Ñ–æ–Ω:", delivery_hours_t:"–ß–∞—Å:", delivery_hours_v:"—à—Ç–æ–¥–Ω—è 8:30‚Äì18:30",
    delivery_note:"–ü–∞—Ç—ç–ª–µ—Ñ–∞–Ω—É–π—Ü–µ ‚Äî –ø–∞—Ä–∞—ñ–º –ø–∞ —Å–∫–ª–∞–¥–∑–µ, –±—é–¥–∂—ç—Ü–µ —ñ —Ç—ç—Ä–º—ñ–Ω–∞—Ö –¥–∞—Å—Ç–∞—û–∫—ñ.",

    reviews_h1:"–í–æ–¥–≥—É–∫—ñ –∫–ª—ñ–µ–Ω—Ç–∞—û", rev_1:"–ü—Ä—ã–≥–æ–∂–∞, —Å–≤–æ–µ—á–∞—Å–æ–≤–∞ —ñ –ø–∞—Ö ‚Äî –∑–∞—Ö–∞–ø–ª–µ–Ω–Ω–µ!", rev_2:"–ó–±—ñ–ª—ñ –±—É–∫–µ—Ç –ø–∞–¥ –±—é–¥–∂—ç—Ç —ñ –ø–∞–∂–∞–¥–∞–Ω–Ω—ñ.", rev_buyer:"–ü–∞–∫—É–ø–Ω—ñ–∫",

    faq_h1_a:"–ê–¥–∫–∞–∑—ã", faq_h1_b:"–Ω–∞ –ø—ã—Ç–∞–Ω–Ω—ñ",
    faq_q1:"–Ø–∫ –∞—Ñ–æ—Ä–º—ñ—Ü—å –∑–∞–∫–∞–∑?", faq_a1:"–ê–±—è—Ä—ã—Ü–µ –±—É–∫–µ—Ç —É –∫–∞—Ç–∞–ª–æ–≥—É, –¥–∞–¥–∞–π—Ü–µ —û –∫–æ—à—ã–∫ —ñ –ø–∞–∫—ñ–Ω—å—Ü–µ –∑–∞—è—û–∫—É. –ú—ã –∑–≤—è–∂–∞–º—Å—è —ñ —û–∑–≥–æ–¥–Ω—ñ–º –¥–∞—Å—Ç–∞—û–∫—É.",
    faq_q2:"–†–∞–±—ñ—Ü–µ —ñ–Ω–¥—ã–≤—ñ–¥—É–∞–ª—å–Ω—ã—è –∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ?", faq_a2:"–¢–∞–∫. –ü–∞–¥ –±—é–¥–∂—ç—Ç, –∫–æ–ª–µ—Ä—ã —ñ –Ω–∞–≥–æ–¥—É. –ü–∞–¥–±—è—Ä–æ–º —Å–≤–µ–∂—ã—è —Å–µ–∑–æ–Ω–Ω—ã—è –∫–≤–µ—Ç–∫—ñ.",
    faq_q3:"–Ø–∫ –ø—Ä–∞—Ü—É–µ –¥–∞—Å—Ç–∞—û–∫–∞ –ø–∞ –≥–æ—Ä–∞–¥–∑–µ?", faq_a3:"–î–∞—Å—Ç–∞—û–ª—è–µ–º –ø–∞ –•–æ–π–Ω—ñ–∫–∞—Ö —É –¥–∑–µ–Ω—å –∑–∞–∫–∞–∑—É (–∫–∞–ª—ñ —ë—Å—Ü—å –∫–≤–µ—Ç–∫—ñ). –Å—Å—Ü—å —Å–∞–º–∞–≤—ã–≤–∞–∑: –≤—É–ª. –ñ—É–∫–∞–≤–∞, 2–õ.",

    contact_h1_a:"–ó–≤—è–∂—ã—Ü–µ—Å—è", contact_h1_b:"–∑ –Ω–∞–º—ñ",
    contact_name:"–Ü–º—è", contact_email:"Email", contact_phone:"–¢—ç–ª–µ—Ñ–æ–Ω", contact_msg:"–ü–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ", contact_submit:"–ê–¥–ø—Ä–∞–≤—ñ—Ü—å",

    f_quick:"–•—É—Ç–∫—ñ—è —Å–ø–∞—Å—ã–ª–∫—ñ", f_home:"–ì–∞–ª–æ—û–Ω–∞—è", f_about:"–ü—Ä–∞ –Ω–∞—Å", f_catalog:"–ö–∞—Ç–∞–ª–æ–≥", f_reviews:"–í–æ–¥–≥—É–∫—ñ", f_contacts:"–ö–∞–Ω—Ç–∞–∫—Ç—ã",
    f_services:"–ü–∞—Å–ª—É–≥—ñ", f_s1:"–ó–∞–∫–∞–∑ —ñ –¥–∞—Å—Ç–∞—û–∫–∞ –±—É–∫–µ—Ç–∞—û ‚Äî –•–æ–π–Ω—ñ–∫—ñ", f_s2:"–ë—É–∫–µ—Ç—ã/–∫–∞–º–ø–∞–∑—ñ—Ü—ã—ñ: –∞–¥ –∫–ª–∞—Å—ñ–∫—ñ –¥–∞ —ç–∫–∑–æ—Ç—ã–∫—ñ", f_s3:"–ë—É–∫–µ—Ç –Ω—è–≤–µ—Å—Ç—ã", f_s4:"–í—è—Å–µ–ª—å–Ω—ã –¥—ç–∫–æ—Ä",
    f_address_t:"–ê–¥—Ä–∞—Å", f_address_v1:"–≤—É–ª—ñ—Ü–∞ –ñ—É–∫–∞–≤–∞, 2–õ", f_address_v2:"–≥. –•–æ–π–Ω—ñ–∫—ñ, 247618", f_address_v3:"–ë–µ–ª–∞—Ä—É—Å—å",
    f_contact_t:"–ö–∞–Ω—Ç–∞–∫—Ç—ã", f_feedback:"–§–æ—Ä–º–∞ –∑–≤–∞—Ä–æ—Ç–Ω–∞–π —Å—É–≤—è–∑—ñ",

    rights:"–£—Å–µ –ø—Ä–∞–≤—ã –∞–±–∞—Ä–æ–Ω–µ–Ω—ã.",
    cart_title:"–ö–æ—à—ã–∫", cart_total_label:"–†–∞–∑–∞–º:", cart_checkout:"–ê—Ñ–æ—Ä–º—ñ—Ü—å –∑–∞–∫–∞–∑",
    order_title:"–ê—Ñ–∞—Ä–º–ª–µ–Ω–Ω–µ –∑–∞–∫–∞–∑—É",
    order_name_label:"–Ü–º—è*", order_phone_label:"–¢—ç–ª–µ—Ñ–æ–Ω*",
    order_dt_label:"–î–∞—Å—Ç–∞—û–∫–∞ –∞–±–æ —Å–∞–º–∞–≤—ã–≤–∞–∑*", order_dt_delivery:"–î–∞—Å—Ç–∞—û–∫–∞", order_dt_pickup:"–°–∞–º–∞–≤—ã–≤–∞–∑",
    order_address_label:"–ê–¥—Ä–∞—Å (–∫–∞–ª—ñ –¥–∞—Å—Ç–∞—û–∫–∞)", order_when_label:"–ñ–∞–¥–∞–Ω—ã—è –¥–∞—Ç–∞ —ñ —á–∞—Å",
    order_comment_label:"–ö–∞–º–µ–Ω—Ç–∞—Ä—ã", order_hint:"–ü–∞—Å–ª—è –ø–∞—Ü–≤—è—Ä–¥–∂—ç–Ω–Ω—è –≤—ã –∞—Ç—Ä—ã–º–∞–µ—Ü–µ —Ä—ç–∫–≤—ñ–∑—ñ—Ç—ã –¥–ª—è –∞–ø–ª–∞—Ç—ã –∞–±–æ –∞–ø–ª–∞—Ü—ñ—Ü–µ –ø—Ä—ã –∞—Ç—Ä—ã–º–∞–Ω–Ω—ñ.",
    order_submit:"–ê–¥–ø—Ä–∞–≤—ñ—Ü—å –∑–∞—è—û–∫—É", order_success:"–î–∑—è–∫—É–π! –ó–∞—è—û–∫–∞ –∞–¥–ø—Ä–∞—û–ª–µ–Ω–∞.",
    order_error_empty:"–ö–æ—à—ã–∫ –ø—É—Å—Ç—ã.", order_error_send:"–ù–µ —û–¥–∞–ª–æ—Å—è –∞–¥–ø—Ä–∞–≤—ñ—Ü—å. –ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ —è—à—á—ç —Ä–∞–∑ –∞–±–æ –ø–∞—Ç—ç–ª–µ—Ñ–∞–Ω—É–π—Ü–µ.",

    add_to_cart:"–£ –∫–æ—à—ã–∫", wishlist_title:"–£ –∞–±—Ä–∞–Ω—ã—è", share_title:"–ü–∞–¥–∑—è–ª—ñ—Ü—Ü–∞"
  }
};
const t = (key) => (I18N[state.lang] && I18N[state.lang][key]) || I18N.ru[key] || key;

function applyI18n(){
  document.querySelectorAll("[data-i18n]").forEach(el=>{ el.textContent = t(el.dataset.i18n); });
  document.querySelectorAll("[data-i18n-placeholder]").forEach(el=>{ el.setAttribute("placeholder", t(el.dataset.i18nPlaceholder)); });
  const cartLabel = document.querySelector("#cartOffcanvasLabel");
  if (cartLabel) cartLabel.textContent = t("cart_title");
  const cartCheckout = document.querySelector("#openOrderModal");
  if (cartCheckout) cartCheckout.textContent = t("cart_checkout");
}

/* ===== Theme ===== */
function getPreferredTheme(){
  const saved = localStorage.getItem("pt_theme");
  if (saved) return saved;
  return window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function setTheme(theme){
  document.documentElement.setAttribute("data-theme", theme);
  localStorage.setItem("pt_theme", theme);
  updateThemeIcons(theme);
}
function toggleTheme(){
  const next = (document.documentElement.getAttribute("data-theme") === "dark") ? "light" : "dark";
  setTheme(next);
}
function updateThemeIcons(theme){
  document.querySelectorAll("#themeToggle i, #themeToggleFooter i").forEach(icon=>{
    icon.className = "fa-solid " + (theme === "dark" ? "fa-sun" : "fa-moon");
  });
}

/* ===== State ===== */
const BYN = (n) => `${(Number(n) || 0).toFixed(2)} BYN`;
const el = (sel) => document.querySelector(sel);
const els = (sel) => document.querySelectorAll(sel);

const state = {
  lang: localStorage.getItem("pt_lang") || document.documentElement.lang || "ru",
  products: [],
  filtered: [],
  cart: loadCart()
};

function setLang(lang){
  state.lang = (lang === "be" ? "be" : "ru");
  localStorage.setItem("pt_lang", state.lang);
  document.documentElement.lang = state.lang;
  ["#langSelect","#langSelectFooter"].forEach(id=>{
    const s = el(id); if (s) s.value = state.lang;
  });
  applyI18n();
  renderProducts();
}

/* ===== Flower Preloader control ===== */
const Preloader = (() => {
  const root = document.getElementById("flower-pre");
  let hideTimer = 0;

  function start(){
    if (!root) return;
    root.classList.remove("flower-pre--out");
    clearTimeout(hideTimer);
  }
  function done(){
    if (!root) return;
    root.classList.add("flower-pre--out");
    hideTimer = setTimeout(() => root.remove(), 650);
  }

  // Fail-safe: —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–∞–ª
  setTimeout(() => { if (document.getElementById("flower-pre")) done(); }, 12000);

  return { start, done };
})();


/* ===== Cart ===== */
function loadCart(){ try { return JSON.parse(localStorage.getItem("pt_cart") || '{"items":[]}'); } catch { return { items: [] }; } }
function saveCart(){ localStorage.setItem("pt_cart", JSON.stringify(state.cart)); updateCartUI(); }
function addToCart(prod){
  if (!prod) return;
  const idx = state.cart.items.findIndex(i => i.sku === prod.sku);
  if (idx >= 0) state.cart.items[idx].qty += 1;
  else state.cart.items.push({ sku: prod.sku, title: prod.title, price: prod.price, image: prod.image, qty: 1 });
  saveCart();
  bootstrap.Offcanvas.getOrCreateInstance(el("#cartOffcanvas")).show();

}
function removeFromCart(sku){ state.cart.items = state.cart.items.filter(i => i.sku !== sku); saveCart(); }
function changeQty(sku, delta){
  const it = state.cart.items.find(i => i.sku === sku);
  if (!it) return; it.qty = Math.max(1, it.qty + delta); saveCart();
}
function cartTotal(){ return state.cart.items.reduce((s, i) => s + i.price * i.qty, 0); }
function updateCartUI(){
  const list = el("#cartList");
  list.innerHTML = "";

  if (!state.cart.items.length) {
    list.innerHTML = `<li class="list-group-item text-center text-muted">${t("order_error_empty")}</li>`;
    el("#openOrderModal").disabled = true;
  } else el("#openOrderModal").disabled = false;

  state.cart.items.forEach(i => {
    const li = document.createElement("li");
    li.className = "list-group-item d-flex align-items-center";
    li.innerHTML = `
      <img src="${i.image || './assets/productsimg5.webp'}" class="me-3" style="width:56px;height:56px;object-fit:cover;border-radius:6px" alt="">
      <div class="flex-grow-1">
        <div class="fw-semibold">${i.title}</div>
        <div class="text-muted small">${BYN(i.price)} √ó ${i.qty}</div>
      </div>
      <div class="btn-group btn-group-sm ms-2" role="group">
        <button class="btn btn-outline-secondary" data-act="dec" data-sku="${i.sku}">‚àí</button>
        <button class="btn btn-outline-secondary" disabled>${i.qty}</button>
        <button class="btn btn-outline-secondary" data-act="inc" data-sku="${i.sku}">+</button>
      </div>
      <button class="btn btn-link text-danger ms-2" data-act="del" data-sku="${i.sku}" title="–£–¥–∞–ª–∏—Ç—å">
        <i class="fa-solid fa-trash"></i>
      </button>
    `;
    list.appendChild(li);
  });

  el("#cartTotal").textContent = BYN(cartTotal());
  const count = state.cart.items.reduce((s,i)=>s+i.qty,0);
  el("#cartCount").textContent = count;
  el("#cartCountInline").textContent = count;

  list.querySelectorAll("[data-act]").forEach(b=>{
    b.onclick = () => {
      const sku = b.getAttribute("data-sku");
      const act = b.getAttribute("data-act");
      if (act === "inc") changeQty(sku, +1);
      if (act === "dec") changeQty(sku, -1);
      if (act === "del") removeFromCart(sku);
    };
  });

  el("#cart_json") && (el("#cart_json").value = JSON.stringify(state.cart));
}

/* ===== Fetch products from Sheets ===== */
async function fetchText(url){
  if (!url || url === "PASTE_SHEET_URL_HERE") return null;
  const res = await fetch(url);
  return await res.text();
}
function parseCSV(text){
  const rows = text.trim().split(/\r?\n/).map(r => r.split(/,(?=(?:(?:[^"]*"){2})*[^"]*$)/).map(s => s.replace(/^"|"$/g,'')));
  const headers = rows.shift().map(h => h.trim());
  return rows.map(r => Object.fromEntries(r.map((v,i)=>[headers[i], v])));
}
function parseGViz(text){
  const json = JSON.parse(text.replace(/^[^{]+\(/,'').replace(/\);?$/,''));
  const cols = json.table.cols.map(c => c.label || c.id);
  return json.table.rows.map(r => {
    const obj = {};
    r.c.forEach((cell,i)=>{ obj[cols[i]] = cell ? (cell.f ?? cell.v) : ""; });
    return obj;
  });
}

// –î–æ—Å—Ç–∞—ë–º fileId –∏–∑ –ª—é–±–æ–π drive-—Å—Å—ã–ª–∫–∏
function extractDriveId(url) {
  if (!url) return "";
  // —É–∂–µ uc?export=... —Å id=...
  const m0 = String(url).match(/[?&]id=([-\w]{25,})/);
  if (m0) return m0[1];

  try {
    const u = new URL(url);
    // —Ñ–æ—Ä–º–∞—Ç /file/d/<ID>/view
    const m1 = u.pathname.match(/\/d\/([-\w]{25,})/);
    if (m1) return m1[1];
  } catch (_) {}

  // —Ñ–æ–ª–±—ç–∫: –±–µ—Ä—ë–º –ø–æ—Ö–æ–∂–∏–π –Ω–∞ ID —Ñ—Ä–∞–≥–º–µ–Ω—Ç
  const m2 = String(url).match(/[-\w]{25,}/);
  return m2 ? m2[0] : "";
}

// –°–æ–±–∏—Ä–∞–µ–º 2 –≤–∏–¥–∞ —Å—Å—ã–ª–æ–∫: primary (thumbnail) –∏ fallback (uc=view)
function buildDriveImageURLs(fileId, size = 1200) {
  if (!fileId) return { primary: "", fallback: "" };
  return {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç image/jpeg ‚Üí –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç CORB
    primary: `https://drive.google.com/thumbnail?id=${fileId}&sz=w${size}`,
    // –§–æ–ª–±—ç–∫ –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ thumbnail
    fallback: `https://drive.google.com/uc?export=view&id=${fileId}`
  };
}

/* ===== Overlay helpers (Modal/Offcanvas) ===== */
function closeOverlays(){
  const orderModalEl    = el("#orderModal");
  const cartOffcanvasEl = el("#cartOffcanvas");

  try { if (orderModalEl)    bootstrap.Modal.getOrCreateInstance(orderModalEl).hide(); } catch(_) {}
  try { if (cartOffcanvasEl) bootstrap.Offcanvas.getOrCreateInstance(cartOffcanvasEl).hide(); } catch(_) {}
}

/* ===== Toast helper (—Å –∏–∫–æ–Ω–∫–∞–º–∏) ===== */
/* ===== Toast: –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–æ–∑–¥–∞—ë–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ===== */
function ensureToastDOM(){
  if (document.getElementById("globalToast")) return;

  const wrap = document.createElement("div");
  wrap.className = "position-fixed top-0 start-50 translate-middle-x p-3";
  wrap.style.zIndex = "2000";
  wrap.innerHTML = `
    <div id="globalToast" class="toast align-items-center border-0 shadow" role="status" aria-live="polite" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body d-flex align-items-center gap-2">
          <i id="globalToastIcon" class="fa-solid" aria-hidden="true"></i>
          <span id="globalToastBody"></span>
        </div>
        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  `;
  document.body.appendChild(wrap);
}

function showToast(message, type = "success"){
  ensureToastDOM();

  const toastEl = document.getElementById("globalToast");
  const bodyEl  = document.getElementById("globalToastBody");
  const iconEl  = document.getElementById("globalToastIcon");

  if (!toastEl || !bodyEl) {
    // –∂—ë—Å—Ç–∫–∏–π —Ñ–æ–ª–±—ç–∫, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ —Å–æ–≤—Å–µ–º –Ω–µ —Ç–∞–∫
    alert(message);
    return;
  }

  const ok = (type === "success");
  toastEl.classList.remove("text-bg-success","text-bg-danger");
  toastEl.classList.add(ok ? "text-bg-success" : "text-bg-danger");

  if (iconEl){
    iconEl.className = "fa-solid " + (ok ? "fa-circle-check" : "fa-triangle-exclamation");
  }
  bodyEl.textContent = message;

  try {
    const inst = bootstrap.Toast.getOrCreateInstance(toastEl, { delay: 4000, autohide: true });
    // –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–º –∞–Ω–∏–º–∞—Ü–∏—é
    toastEl.classList.remove("show");
    // –Ω–µ–±–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç –¥–∞—ë—Ç Bootstrap –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setTimeout(() => inst.show(), 20);
  } catch {
    // –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è Bootstrap
    alert(message);
  }
}


/* ===== Redirect helper ===== */
function redirectHome(status){
  const url = new URL(window.location.href);
  url.searchParams.set("status", status); // ok | fail
  url.hash = "#top";
  // –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–∞—ë—Ç Bootstrap –∞–Ω–∏–º–∞—Ü–∏—è–º –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
  window.setTimeout(() => { window.location.assign(url.toString()); }, 160);
}

// –ü—Ä–∏–Ω–∏–º–∞–µ–º share-—Å—Å—ã–ª–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º {primary, fallback}
function normalizeDriveURL(url, size = 1200) {
  const id = extractDriveId(url);
  return id ? buildDriveImageURLs(id, size) : { primary: url || "", fallback: "" };
}

function normalizeProducts(rows){
  const M = CONFIG.COLUMN_MAP;
  return rows.map(r => {
    const rawImg = String(r[M.image] ?? "").trim();
    const img = normalizeDriveURL(rawImg, 1400); // –º–æ–∂–Ω–æ –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å —à–∏—Ä–∏–Ω—É
    return {
      sku: String(r[M.sku] ?? "").trim(),
      title: String(r[M.title] ?? "").trim(),
      price: Number(String(r[M.price]).replace(',', '.')),
      old_price: Number(String(r[M.old_price]).replace(',', '.')) || null,
      image: img.primary,                // thumbnail-—Å—Å—ã–ª–∫–∞ (image/jpeg)
      image_fallback: img.fallback,      // uc?export=view
      category: String(r[M.category] ?? "").trim(),
      active: String(r[M.active] ?? "true").toLowerCase() !== "false",
      discount: String(r[M.discount] ?? "").trim()
    };
  }).filter(p => p.title && p.active);
}

async function loadProducts(){
  let text = null, rows = null;
  try{
    const url = withGid(CONFIG.SHEET_URL, CONFIG.SHEETS.PRODUCTS_GID);
    text = await fetchText(url);
    if (text) {
      if (text.startsWith("/*O_o*/")) rows = parseGViz(text);
      else if (text.trim().startsWith("[")) rows = JSON.parse(text);
      else rows = parseCSV(text);
    }
  }catch(e){ console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É, –∏—Å–ø–æ–ª—å–∑—É—é –¥–µ–º–æ-—Ç–æ–≤–∞—Ä—ã.", e); }
  if (!rows) rows = [
    { sku:"B001", title:"–ë—É–∫–µ—Ç —Ä–æ–∑ –ù–µ–∂–Ω–æ—Å—Ç—å", price:"49", old_price:"59", image:"./assets/productsimg1.webp", category:"–†–æ–∑—ã", active:"true", discount:"-17%" },
    { sku:"B002", title:"–ë—É–∫–µ—Ç —Ç—é–ª—å–ø–∞–Ω",      price:"35", old_price:"",   image:"./assets/productsimg2.webp", category:"–¢—é–ª—å–ø–∞–Ω—ã", active:"true", discount:"" },
    { sku:"B003", title:"–ë—É–∫–µ—Ç –ø–∏–æ–Ω–µ–π",       price:"55", old_price:"65", image:"./assets/productsimg3.webp", category:"–ü–∏–æ–Ω—ã", active:"true", discount:"-15%" }
  ];
  state.products = normalizeProducts(rows);
  state.filtered = [...state.products];

  const cats = Array.from(new Set(state.products.map(p => p.category).filter(Boolean))).sort();
  const catSel = el("#categorySelect"); catSel.innerHTML = `<option value="">${t("filters_all_categories")}</option>`;
  cats.forEach(c => {
    const o = document.createElement("option"); o.value = c; o.textContent = c; catSel.appendChild(o);
  });

  renderProducts();
}


/* ===== Render products ===== */
function renderProducts(){
  const grid = el("#products-grid"); grid.innerHTML = "";
  const list = state.filtered;
  if (!list.length){ el("#emptyCatalog").classList.remove("d-none"); return; }
  el("#emptyCatalog").classList.add("d-none");

  list.forEach(p => {
    const col = document.createElement("div");
    col.className = "col-sm-6 col-lg-4 mb-4";
    col.innerHTML = `
      <div class="innerproductsection h-100 d-flex flex-column">
        ${p.discount ? `<span class="discount">${p.discount}</span>` : ""}
        <img src="${p.image || './assets/productsimg5.webp'}"
             alt="${p.title}"
             loading="lazy"
             referrerpolicy="no-referrer">
        <div class="cartcontainer">
          <button class="wishlist" title="${t("wishlist_title")}"><i class="fa-solid fa-heart"></i></button>
          <button class="btn add-to-cart" data-sku="${p.sku}">${t("add_to_cart")} <i class="fa-solid fa-cart-plus"></i></button>
          <button class="share" title="${t("share_title")}"><i class="fa-solid fa-share"></i></button>
        </div>
        <h2>${p.title}</h2>
        <h1 class="price">
          <span class="clrchange">${BYN(p.price)}</span>
          ${p.old_price ? `<del>${BYN(p.old_price)}</del>` : ""}
        </h1>
      </div>
    `;
    grid.appendChild(col);

    // –§–æ–ª–±—ç–∫ –Ω–∞ uc?export=view –ø—Ä–∏ 403/404/CORB –∏ —Ç.–ø.
    const imgEl = col.querySelector("img");
    imgEl.addEventListener("error", () => {
      if (imgEl.dataset.fallbackTried) return;
      imgEl.dataset.fallbackTried = "1";
      if (p.image_fallback && imgEl.src !== p.image_fallback) {
        imgEl.src = p.image_fallback;
      }
    });
  });

  grid.querySelectorAll(".add-to-cart").forEach(btn=>{
    btn.addEventListener("click", e=>{
      const sku = e.currentTarget.dataset.sku;
      const prod = state.products.find(x => x.sku === sku);
      addToCart(prod);
    });
  });
}


/* ===== Filters ===== */
function applyFilters(){
  const q = el("#searchInput").value.trim().toLowerCase();
  const cat = el("#categorySelect").value;
  state.filtered = state.products.filter(p => {
    const okQ = !q || p.title.toLowerCase().includes(q);
    const okC = !cat || p.category === cat || (cat && p.category.toLowerCase().includes(cat.toLowerCase()));
    return okQ && okC;
  });
  renderProducts();
}
function resetFilters(){
  el("#searchInput").value = "";
  el("#categorySelect").value = "";
  state.filtered = [...state.products];
  renderProducts();
}
function setCategory(catVal){
  const sel = el("#categorySelect");
  sel.value = catVal;
  applyFilters();
}

/* ===== Order / Contact ===== */

// –ù–∞–¥—ë–∂–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞: —Å–Ω–∞—á–∞–ª–∞ CORS (–Ω–æ—Ä–º–∞–ª—å–Ω–æ —á–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç),
// –µ—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç ‚Äî no-cors (opaque, –Ω–æ –∑–∞–ø—Ä–æ—Å —É—Ö–æ–¥–∏—Ç),
// –≤ –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ sendBeacon (fire-and-forget).
async function postOrder(payload){
  const url = CONFIG.GS_WEB_APP_URL;

  // 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ Apps Script /exec
  const okURL = typeof url === "string" && /^https:\/\/script\.google\.com\/macros\/s\/[-\w]+\/exec(\?.*)?$/.test(url);
  if (!okURL) return { status: "fail", reason: "invalid_url" };

  // 2) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û —Å CORS –∏ –∂–¥—ë–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
  const res = await fetch(url, {
    method: "POST",
    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –≤–∞—à–∏–º –±–µ–∫–æ–º (–∫–∞–∫ –±—ã–ª–æ —É –≤–∞—Å)
    headers: { "Content-Type": "text/plain;charset=utf-8" },
    body: JSON.stringify(payload),
    mode: "cors",
    cache: "no-store",
    keepalive: true
  });

  if (!res.ok) return { status: "fail", code: res.status };

  // 3) –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ JSON: { ok: true } –∏–ª–∏ { status: "ok" }
  let data = null;
  try { data = await res.json(); } catch(_) {}

  if (data && (data.ok === true || data.status === "ok")) {
    return { status: "ok", server: data };
  }

  // –ù–∏–∫–∞–∫–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî —Å—á–∏—Ç–∞–µ–º –Ω–µ—É—Å–ø–µ—Ö–æ–º
  return { status: "fail", reason: "bad_response", server: data };
}


async function submitOrder(e){
  e.preventDefault();

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –î–û await/–∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–æ–∫
  const form     = e.currentTarget || el("#orderForm");
  const errEl    = el("#orderError");
  const submitBtn= el("#submitOrderBtn");

  if (errEl) errEl.classList.add("d-none");

  const data = Object.fromEntries(new FormData(form).entries());
  const orderId = "ORD-" + Date.now() + "-" + Math.floor(Math.random()*1e6);

  const payload = {
    order: {
      id: orderId,
      name: data.name || "",
      phone: data.phone || "",
      delivery_type: data.delivery_type || "delivery",
      address: data.address || "",
      date_time: data.date_time || "",
      comment: data.comment || "",
      total_byn: cartTotal()
    },
    items: state.cart.items
  };

  if (!payload.items.length){
    if (errEl) {
      errEl.textContent = t("order_error_empty");
      errEl.classList.remove("d-none");
    }
    return;
  }

  // –ö–Ω–æ–ø–∫–∞: —Å–ø–∏–Ω–Ω–µ—Ä/–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ ‚Äî –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
  const prevHTML = submitBtn ? submitBtn.innerHTML : "";
  if (submitBtn){
    submitBtn.disabled = true;
    submitBtn.setAttribute("aria-busy","true");
    submitBtn.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> ${t("order_submit")}`;
  }

  try{
    const result = await postOrder(payload);

    if (result.status === "ok"){
      // –¢–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —É—Å–ø–µ—Ö –∑–∞–∫—Ä—ã–≤–∞–µ—Ç UI
      closeOverlays();
      state.cart.items = []; 
      saveCart();
      if (form) form.reset();
      showToast(t("order_success") + ` (‚Ññ ${orderId})`, "success");
    } else {
      if (errEl){
        errEl.textContent = t("order_error_send");
        errEl.classList.remove("d-none");
      }
      showToast(t("order_error_send"), "danger");
    }

  } finally{
    if (submitBtn){
      submitBtn.disabled = false;
      submitBtn.removeAttribute("aria-busy");
      submitBtn.innerHTML = prevHTML;
    }
  }
}


function submitContact(e){
  e.preventDefault();
  const data = Object.fromEntries(new FormData(e.currentTarget).entries());
  alert((state.lang === "be" ? "–î–∑—è–∫—É–π! –ú—ã –∑–≤—è–∂–∞–º—Å—è: " : "–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è: ") + (data.phone || data.email || ""));
  e.currentTarget.reset();
}

/* ===== Init ===== */
$(document).ready(function () {
  $(".owl-carousel").owlCarousel({
    autoplay:true, margin:30, loop:true, dots:true, nav:true,
    navText:["<i class='fas fa-long-arrow-alt-left'></i>","<i class='fas fa-long-arrow-alt-right'></i>"],
    responsive:{0:{items:1},600:{items:2},1000:{items:3}}
  });
});

/* ===== Topbar: —Ç–µ–∫—Å—Ç/—Å–∫–æ—Ä–æ—Å—Ç—å/–≤–∫–ª-–≤—ã–∫–ª –∏–∑ –ª–∏—Å—Ç–∞ ¬´–ò–Ω—Ñ–æ¬ª, –∑–∞–∫—Ä—ã—Ç–∏–µ –±–µ–∑ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ===== */
function pickLangCol(headers, lang){
  const low = headers.map(h=>h.toLowerCase());
  let idx = low.findIndex(h => h === lang);
  if (idx<0) idx = low.findIndex(h => h.endsWith("_"+lang));
  if (idx<0) idx = low.findIndex(h => /^(value|msg|text|content)$/.test(h));
  if (idx<0) idx = headers[1] ? 1 : 0;
  return headers[idx];
}

function findKeyCol(headers){
  const low = headers.map(h=>h.toLowerCase());
  const candidates = ["key","name","id","slug","code"];
  const idx = candidates.map(k=>low.indexOf(k)).find(i=>i>=0);
  return idx>=0 ? headers[idx] : null;
}
function isTruthy(v){
  return /^(1|true|yes|on|–¥–∞|–≤–∫–ª|enable|enabled)$/i.test(String(v).trim());
}
function findCol(headers, ...names){
  const low = headers.map(h=>String(h).toLowerCase().trim());
  for (const name of names.flat()){
    const i = low.indexOf(String(name).toLowerCase());
    if (i >= 0) return headers[i];
  }
  return null;
}
function isTruthy(v){
  return /^(1|true|yes|on|–¥–∞|–≤–∫–ª|enable|enabled)$/i.test(String(v).trim());
}
function phoneToHref(raw){
  const hasPlus = /\+/.test(raw);
  const digits  = String(raw).replace(/\D/g,'');
  return "tel:" + (hasPlus ? "+" : "") + digits;
}

/** –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ */
function updateContactsDynamic({ address, phone, hours, company, unp }){
  // –î–æ—Å—Ç–∞–≤–∫–∞ (–∫–∞—Ä—Ç–æ—á–∫–∞)
  const addrEl = el("#deliveryAddress");
  const phoneEl = el("#phoneLink");
  const hoursEl = el("#deliveryHours");

  if (address && addrEl) addrEl.textContent = address;
  if (hours && hoursEl)  hoursEl.textContent = hours;
  if (phone && phoneEl){
    phoneEl.textContent = phone;
    phoneEl.setAttribute("href", phoneToHref(phone));
  }

  // –ü–æ–¥–≤–∞–ª: –∞–¥—Ä–µ—Å –∏ —Ç–µ–ª–µ—Ñ–æ–Ω
  const fAddrEl = el("#footerAddress");
  const fPhoneEl = el("#footerPhone");
  if (address && fAddrEl) fAddrEl.textContent = address;
  if (phone && fPhoneEl){
    fPhoneEl.textContent = phone;
    fPhoneEl.setAttribute("href", phoneToHref(phone));
  }

  // –ü–æ–¥–≤–∞–ª: –≤–ª–∞–¥–µ–ª–µ—Ü + –£–ù–ü (–ª–æ–∫–∞–ª–∏–∑—É–µ–º –ø–æ–¥–ø–∏—Å—å)
  const legalEl = el("#legalOwner");
  if (legalEl && (company || unp)){
    const ownerLabel = (state.lang === "be")
      ? "–£–ª–∞–¥–∞–ª—å–Ω—ñ–∫"
      : "–í–ª–∞–¥–µ–ª–µ—Ü";
    const unpLabel = "–£–ù–ü";
    const companyTxt = company || "";
    const unpTxt = unp ? ` ${unpLabel}: ${String(unp).trim()}` : "";
    legalEl.textContent = `${ownerLabel}: ${companyTxt}${unpTxt}`;
  }
}

/* ===== Topbar: msg + active –∏–∑ —Å—Ç—Ä–æ–∫–∏ topbar_msg –Ω–∞ –ª–∏—Å—Ç–µ ¬´–ò–Ω—Ñ–æ¬ª ===== */
async function initTopbarFromSheet(){
  const bar = el("#topbar");
  const mq  = el("#topbarMarquee");
  const btn = el("#topbarClose");
  if (!bar || !mq) return;

  const html = document.documentElement;
  const LS_DISMISS = "pt_topbar_dismissed_until";
  const until = Number(localStorage.getItem(LS_DISMISS) || 0);
  if (Date.now() < until){
    bar.classList.add("topbar--out");
    html.classList.add("topbar-closed");
  }

  btn && btn.addEventListener("click", ()=>{
    bar.classList.add("topbar--out");
    html.classList.add("topbar-closed");
    const d = new Date(); d.setDate(d.getDate()+3);
    localStorage.setItem(LS_DISMISS, String(d.getTime()));
  });

  // —á–∏—Ç–∞–µ–º ¬´–ò–Ω—Ñ–æ¬ª
  try{
    const url  = withGid(CONFIG.SHEET_URL, CONFIG.SHEETS.META_GID);
    const text = await fetchText(url);
    if (!text) return;

    const rows = text.startsWith("/*O_o*/") ? parseGViz(text)
               : text.trim().startsWith("[") ? JSON.parse(text)
               : parseCSV(text);
    if (!rows?.length) return;

    const headers = Object.keys(rows[0]);
    const keyCol  = findKeyCol(headers);                  // key/name/...
    const valCol  = pickLangCol(headers, state.lang);     // ru/be/value/...
    const actCol  = findCol(headers, "active");

    // –°–ª–æ–≤–∞—Ä—å –ø–æ –∫–ª—é—á—É
    const norm = s => String(s ?? "").trim().toLowerCase();
    const byKey = {};
    rows.forEach(r => {
      const k = keyCol ? norm(r[keyCol]) : "";
      if (k) byKey[k] = r;
    });
    const get = (k) => {
      const r = byKey[norm(k)];
      if (!r) return "";
      const v = r[valCol] ?? r.ru ?? r.be ?? r.value ?? r.msg ?? r.text ?? "";
      return String(v ?? "").trim();
    };
    const isActive = (rec) => (actCol && rec) ? isTruthy(rec[actCol]) : true;

    // ---- Topbar (msg + active) ----
    const tb = byKey["topbar_msg"] || rows[0];
    if (!tb || !isActive(tb)){
      bar.classList.add("topbar--out");
      html.classList.add("topbar-closed");
    } else {
      const msg = get("topbar_msg");
      if (msg) mq.textContent = msg;
      else {
        bar.classList.add("topbar--out");
        html.classList.add("topbar-closed");
      }
    }

    // ---- –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∞–¥—Ä–µ—Å/—á–∞—Å—ã/–£–ù–ü ----
    updateContactsDynamic({
      address: get("address"),
      phone:   get("phone"),
      hours:   get("hours"),
      company: get("company_name"),
      unp:     get("unp")
    });

  } catch(e){
    console.warn("Topbar/Meta read failed", e);
  }
}

window.addEventListener("DOMContentLoaded", async () => {
  // Year
  el("#year").textContent = new Date().getFullYear();

  // Theme
  setTheme(getPreferredTheme());
  els("#themeToggle, #themeToggleFooter").forEach(b => b.addEventListener("click", toggleTheme));

  // Language
  setLang(state.lang);
  ["#langSelect","#langSelectFooter"].forEach(id=>{
    const s = el(id); if (s){ s.value = state.lang; s.addEventListener("change", e => setLang(e.target.value)); }
  });
  applyI18n();

  // Filters
  el("#searchInput").addEventListener("input", applyFilters);
  el("#categorySelect").addEventListener("change", applyFilters);
  el("#resetFilters").addEventListener("click", resetFilters);

  // Chips -> category filter
  document.addEventListener("click", (e)=>{
    const chip = e.target.closest(".chip-cat");
    if (!chip) return;
    setCategory(chip.dataset.cat || "");
  });

  // Forms
  el("#orderForm").addEventListener("submit", submitOrder);
  el("#contactForm").addEventListener("submit", submitContact);

  Preloader.start();
  await initTopbarFromSheet(); 
  await loadProducts();
  updateCartUI();
  Preloader.done();

  // Localize dynamic placeholders
  el("#searchInput").setAttribute("placeholder", t("filters_search_placeholder"));

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ (–∏ –æ—á–∏—Å—Ç–∏—Ç—å URL)
  const params = new URLSearchParams(window.location.search);
  const st = params.get("status");
  if (st === "ok") {
    showToast(t("order_success"), "success");
  } else if (st === "fail") {
    showToast(t("order_error_send"), "danger");
  }
  if (st) {
    history.replaceState({}, "", window.location.pathname + window.location.hash);
  }


});
